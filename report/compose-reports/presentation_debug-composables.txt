restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun MainActivityNavHost(
  unstable viewModel: MainActivityViewModel? = @dynamic hiltViewModel(null, $composer, 0, 0b0001)
  unstable navController: NavHostController? = @dynamic rememberNavController(
  $composer   =   $composer  , 
  $changed   =   8
)
)
restartable skippable fun Transition(
  stable isSignIn: Function0<Boolean>
  stable navigateToMain: Function0<Unit>
  stable navigateToSignIn: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SimpleIcon(
  stable modifier: Modifier? = @static Companion
  stable drawable: Int
  stable tint: Color = @dynamic LocalContentColor.current.copy(
  alpha   =   LocalContentAlpha  .  current
)
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun CenterDotProgressIndicator(
  stable backGround: Color = @static Disabled
  stable isLoading: Function0<Boolean>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SimpleHeightSpacer(
  stable dp: Int
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SimpleWidthSpacer(
  stable dp: Int
)
restartable skippable fun SimpleToast(
  stable text: Function0<Int?>
  stable shownToast: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun CircleCheckBox(
  stable modifier: Modifier? = @static Companion
  stable isChecked: Function0<Boolean>
  stable onClick: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun CustomIconButton(
  stable modifier: Modifier? = @static Companion
  stable onClick: Function0<Unit>
  stable drawable: Int
  stable tint: Color = @dynamic LocalContentColor.current.copy(
  alpha   =   LocalContentAlpha  .  current
)
  stable contentDescription: String? = @static null
)
restartable scheme("[androidx.compose.ui.UiComposable]") fun CustomIconButton(
  stable modifier: Modifier? = @static Companion
  stable onClick: Function0<Unit>
  unstable painter: Painter
  stable tint: Color = @dynamic LocalContentColor.current.copy(
  alpha   =   LocalContentAlpha  .  current
)
  stable contentDescription: String? = @static null
)
restartable skippable fun FinishActivityBackHandler(
  unstable activity: ComponentActivity? = @dynamic LocalContext.current
)
restartable skippable fun BackHandler(
  stable enabled: Function0<Boolean>
  stable task: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable]]") fun DialogRoot(
  stable onDismiss: Function0<Unit>
  stable content: Function2<Composer, Int, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun DialogTitle(
  stable text: Int
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun DialogTextButtons(
  stable positiveTextColor: Color = @static Companion.Unspecified
  stable cancelTextColor: Color = @dynamic MaterialTheme.colors.error
  stable positiveButtonEnabled: Function0<Boolean>
  stable onPositiveButtonClick: Function0<Unit>
  stable onDismiss: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun DialogTextButton(
  stable <this>: RowScope
  stable text: Int
  stable textColor: Color = @static Companion.Unspecified
  stable enabled: Function0<Boolean>? = @static {
  LiveLiterals$DialogKt  .  Boolean$fun-$anonymous$$param-enabled$fun-DialogTextButton  (  )
}

  stable onClick: Function0<Unit>
)
scheme("[androidx.compose.ui.UiComposable]") fun Dot(
  stable offset: Float
)
fun animateOffsetWithDelay(
  stable delay: Int
): State<Float>
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun DotProgressIndicator(
  stable modifier: Modifier
  stable size: Dp
  stable color: Color = @dynamic MaterialTheme.colors.primary.copy(
  alpha   =   ContentAlpha  .  disabled
)
)
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable]]") fun MaxWidthButton(
  stable text: Int
  stable enabled: Function0<Boolean>
  stable colors: ButtonColors? = @dynamic ButtonDefaults.buttonColors(<unsafe-coerce>(0L), <unsafe-coerce>(0L), <unsafe-coerce>(0L), <unsafe-coerce>(0L), $composer, 0b1000000000000000, 0b1111)
  stable icon: Function2<Composer, Int, Unit>? = @static ComposableSingletons$MaxWidthButtonKt.lambda-1
  stable onClick: Function0<Unit>
  unstable focusManager: FocusManager? = @dynamic LocalFocusManager.current
)
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable]]") fun MaxWidthTextField(
  state: MaxWidthTextFieldState
  stable textFieldValue: Function0<TextFieldValue>
  stable error: Function0<Int?>? = @static {
  null
}

  stable onValueChange: Function1<TextFieldValue, Unit>
  stable onFocusChanged: Function1<FocusState, Unit>
  stable trailingIcon: Function2<Composer, Int, Unit>? = @static null
  stable isVisible: Function0<Boolean>? = @static {
  LiveLiterals$MaxWidthTextFieldKt  .  Boolean$fun-$anonymous$$param-isVisible$fun-MaxWidthTextField  (  )
}

)
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable]]") fun TextField(
  state: MaxWidthTextFieldState
  stable onFocusChanged: Function1<FocusState, Unit>
  stable textFieldValue: Function0<TextFieldValue>
  stable onValueChange: Function1<TextFieldValue, Unit>
  stable error: Function0<Int?>
  stable isVisible: Function0<Boolean>
  stable trailingIcon: Function2<Composer, Int, Unit>?
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ErrorText(
  stable error: Function0<Int?>
)
fun rememberMaxWidthTextFiledState(
  stable label: Int
  stable placeholder: Int = @dynamic string.empty
  stable showKeyboardEnabled: Boolean = @dynamic LiveLiterals$MaxWidthTextFieldKt.Boolean$param-showKeyboardEnabled$fun-rememberMaxWidthTextFiledState()
  stable keyboardOptions: KeyboardOptions? = @dynamic KeyboardOptions(
  imeAction   =   Companion  .  Done
)
  focusRequester: FocusRequester? = @dynamic remember({
  FocusRequester  (  )
}
, $composer, 0)
  stable keyboardController: SoftwareKeyboardController? = @dynamic LocalSoftwareKeyboardController.current
): MaxWidthTextFieldState
fun rememberEmailTextFieldState(
  stable imeAction: ImeAction
): MaxWidthTextFieldState
fun rememberPasswordTextFieldState(
  stable label: Int = @dynamic string.password
  stable imeAction: ImeAction = @dynamic Companion.Done
): MaxWidthTextFieldState
restartable fun ShowKeyboard(
  stable showKeyboardEnabled: Function0<Boolean>
  unstable showKeyboard: SuspendFunction0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun MainNavHost(
  unstable state: MainNavHostState? = @dynamic rememberMainNavHostState(null, null, $composer, 0, 0b0011)
)
fun rememberMainNavHostState(
  unstable navController: NavHostController? = @dynamic rememberNavController(
  $composer   =   $composer  , 
  $changed   =   8
)
  stable currentBackStack: State<NavBackStackEntry?>? = @dynamic navController.currentBackStackEntryAsState($composer, 0b1000)
): MainNavHostState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun AllExpandIcon(
  stable size: Dp
  stable onClick: Function0<Unit>
  stable tint: Color
  stable isAllExpand: Function0<Boolean>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ExpandIcon(
  stable modifier: Modifier? = @static Companion
  stable isExpanded: Function0<Boolean>
  stable onClick: Function0<Unit>
  stable isAllExpand: Function0<Boolean>
  stable updateIsExpand: Function1<Boolean, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun DetailScreen(
  stable subCategoryName: String
  unused stable subCategoryKey: String
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun FrontLayerContent()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun FolderGrid()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun Header(
  stable title: Function0<String>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun FolderPreview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun MainCategoryScreen(
  unstable viewModel: MainCategoryViewModel? = @dynamic hiltViewModel(null, $composer, 0, 0b0001)
  stable uiStates: BaseMainUIState? = @dynamic viewModel.uiStates
  stable onMainCategoryClick: Function1<SubCategoryParent, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun MainCategoryCard(
  stable modifier: Modifier
  stable mainCategory: MainCategory
  stable subCategoriesSize: Function1<SubCategoryParent, Int>
  stable isLoading: Function0<Boolean>
  stable onMainContentClick: Function1<SubCategoryParent, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SubCategoryCountText(
  stable <this>: BoxScope
  stable mainCategory: MainCategory
  stable isLoading: Function0<Boolean>
  stable subCategoriesSize: Function1<SubCategoryParent, Int>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun DrawerContents(
  stable user: Function0<StableUser?>
  stable isLoading: Function0<Boolean>
  stable isAllExpand: Function0<Boolean>
  stable subCategories: Function1<SubCategoryParent, ImmutableList<StableSubCategory>>
  stable subCategoriesSize: Function1<SubCategoryParent, Int>
  stable state: DrawerContentsState? = @static remember({
  DrawerContentsState  (  )
}
, $composer, 0)
  stable onEssentialMenuClick: Function1<@[ParameterName(name = 'essentialMenu')] EssentialMenus, Unit>
  stable onMainCategoryClick: Function1<SubCategoryParent, Unit>
  stable onSubCategoryClick: Function1<StableSubCategory, Unit>
  stable onSettingIconClick: Function0<Unit>
  stable allExpandIconClick: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun IconWithDivider(
  stable isAllExpand: Function0<Boolean>
  stable onCLick: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun EssentialMenu(
  stable essentialMenu: EssentialMenu
  stable onClick: Function1<EssentialMenus, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable]]") fun DrawerContentRow(
  stable modifier: Modifier
  stable onClick: Function0<Unit>
  stable content: @[ExtensionFunctionType] Function3<RowScope, Composer, Int, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun DrawerContentText(
  stable modifier: Modifier? = @static Companion
  stable text: Function0<String>
  stable style: TextStyle
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun DrawerContentText(
  stable modifier: Modifier? = @static Companion
  stable text: String
  stable style: TextStyle
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun DrawerHeader(
  stable user: Function0<StableUser?>
  stable onSettingIconClick: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun HeaderText(
  stable <this>: RowScope
  stable name: Function0<String>
  stable email: Function0<String>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun DrawerMainCategory(
  stable mainCategory: MainCategory
  stable subCategories: Function1<SubCategoryParent, ImmutableList<StableSubCategory>>
  stable subCategoriesSize: Function1<SubCategoryParent, Int>
  stable isLoading: Function0<Boolean>
  stable isAllExpand: Function0<Boolean>
  stable onMainCategoryClick: Function1<SubCategoryParent, Unit>
  stable onSubCategoryClick: Function1<StableSubCategory, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ExpandIcon(
  stable isLoading: Function0<Boolean>
  stable isExpand: Function0<Boolean>
  stable onClick: Function0<Unit>
  stable isAllExpand: Function0<Boolean>
  stable updateIsExpand: Function1<Boolean, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SubCategories(
  stable isExpand: Function0<Boolean>
  stable subCategories: Function0<ImmutableList<StableSubCategory>>
  stable onClick: Function1<StableSubCategory, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SubCategories(
  stable subCategories: Function0<ImmutableList<StableSubCategory>>
  stable onClick: Function1<StableSubCategory, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SubCategory(
  stable name: Function0<String>
  stable onClick: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun TotalCount(
  stable <this>: RowScope
  stable subCategoriesSize: Function0<Int>
  stable isLoading: Function0<Boolean>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable]]") fun MainRoot(
  stable onSettingIconClick: Function0<Unit>
  stable onEssentialMenuClick: Function1<@[ParameterName(name = 'essentialMenu')] EssentialMenus, Unit>
  stable onMainCategoryClick: Function1<SubCategoryParent, Unit>
  stable onSubCategoryClick: Function1<StableSubCategory, Unit>
  unstable viewModel: MainRootViewModel? = @dynamic hiltViewModel(null, $composer, 0, 0b0001)
  stable uiStates: BaseIsAllExpandState? = @dynamic viewModel.uiStates
  stable state: MainRootState? = @dynamic rememberMainRootState(null, $composer, 0, 0b0001)
  unstable coroutineScope: CoroutineScope? = @dynamic rememberCoroutineScope(null, $composer, 0, 0b0001)
  stable content: Function3<PaddingValues, Composer, Int, Unit>
)
fun rememberMainRootState(
  stable scaffoldState: ScaffoldState? = @dynamic rememberScaffoldState(null, null, $composer, 0, 0b0011)
): MainRootState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SettingScreen(
  unstable viewModel: SettingViewModel? = @dynamic hiltViewModel(null, $composer, 0, 0b0001)
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SignOutButton(
  stable onClick: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun EditSubCategoryNameDialog(
  stable showDialog: Function0<Boolean>
  stable selectedSubCategoryName: Function0<String>
  stable subCategoryNames: Function0<ImmutableList<String>>
  stable onPositiveButtonClick: Function1<@[ParameterName(name = 'name')] String, Unit>
  stable onDismiss: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SubCategoryTextFieldDialog(
  stable title: Int
  stable error: Function0<Int?>
  stable textFieldValue: Function0<TextFieldValue>
  stable positiveButtonEnabled: Function0<Boolean>
  stable showDialog: Function0<Boolean>
  stable onValueChange: Function1<TextFieldValue, Unit>
  stable onFocusChanged: Function1<FocusState, Unit>
  stable onPositiveButtonClick: Function0<Unit>
  stable onDismiss: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SubCategoryScreen(
  stable parent: SubCategoryParent
  unstable viewModel: SubCategoryViewModel? = @dynamic hiltViewModel(null, $composer, 0, 0b0001)
  unstable uiStates: SubCategoryUIState? = @dynamic viewModel.getUiStates(parent)
  stable states: SubCategoryState? = @dynamic rememberSubCategoryState($composer, 0)
  unstable coroutineScope: CoroutineScope? = @dynamic rememberCoroutineScope(null, $composer, 0, 0b0001)
  stable onSubCategoryClick: Function1<StableSubCategory, Unit>
)
fun rememberSubCategoryState()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun AddSubcategoryDialogFab(
  stable <this>: BoxScope
  stable onPositiveButtonClick: Function1<@[ParameterName(name = 'newName')] String, Unit>
  stable subCategoryNames: Function0<ImmutableList<String>>
  stable isSelectMode: Function0<Boolean>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun AddSubCategoryFab(
  stable <this>: BoxScope
  stable showDialog: Function0<Unit>
  stable isSelectMode: Function0<Boolean>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SubCategoryBottomAppBar(
  stable <this>: BoxScope
  stable selectedSubCategoriesSize: Function0<Int>
  stable isAllSelected: Function0<Boolean>
  stable showEditIcon: Function0<Boolean>
  stable showDeleteIcon: Function0<Boolean>
  stable onAllSelectCheckBoxClick: Function0<Unit>
  stable onEditSubCategoryNameClick: Function0<Unit>
  stable isSelectMode: Function0<Boolean>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun BottomAppBarIcon(
  stable visible: Function0<Boolean>
  stable onClick: Function0<Unit>
  stable drawable: Int
  stable text: Int
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SelectText(
  stable selectedSubCategoriesSize: Function0<Int>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SubCategoryCard(
  stable isExpanded: Function0<Boolean>
  stable subCategory: Function0<StableSubCategory>
  stable isAllExpand: Function0<Boolean>
  stable onClick: Function0<Unit>
  stable selectedCategoryKeys: Function0<ImmutableSet<String>>
  stable updateIsExpanded: Function1<Boolean, Unit>
  stable toggleIsExpanded: Function0<Unit>
  stable isSelectMode: Function0<Boolean>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SubCategoryCardTitle(
  stable subCategory: Function0<StableSubCategory>
  stable isExpanded: Function0<Boolean>
  stable isAllExpand: Function0<Boolean>
  stable updateIsExpand: Function1<Boolean, Unit>
  stable onExpandIconClick: Function0<Unit>
  stable onCheckBoxClick: Function0<Unit>
  stable selectedCategoryKeys: Function0<ImmutableSet<String>>
  stable isSelectMode: Function0<Boolean>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun AnimateSpacer(
  stable isSelectMode: Function0<Boolean>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun TotalCount()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun Name(
  stable name: Function0<String>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun TitleCircleCheckBox(
  stable subCategory: Function0<StableSubCategory>
  stable onClick: Function0<Unit>
  stable selectedCategoryKeys: Function0<ImmutableSet<String>>
  stable isSelectMode: Function0<Boolean>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SubCategoryInfo(
  stable isExpand: Function0<Boolean>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SubCategoryInfoText(
  stable <this>: RowScope
  stable infoTitle: Int
  stable info: Int
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SubCategoryContent(
  stable parent: SubCategoryParent
  stable isAllExpand: Function0<Boolean>
  stable subCategories: Function0<ImmutableList<StableSubCategory>>
  stable sort: Function0<SubCategorySortPreferences>
  unstable state: SubCategoryContentState? = @dynamic rememberSubCategoryContentState(null, null, null, $composer, 0, 0b0111)
  stable allExpandIconClick: Function0<Unit>
  stable onLongClick: Function1<@[ParameterName(name = 'key')] String, Unit>
  stable onSubCategoryClick: Function1<StableSubCategory, Unit>
  stable onSortClick: Function1<SubCategorySort, Unit>
  stable onOrderClick: Function1<SortOrder, Unit>
  stable selectedSubCategoryKey: Function0<ImmutableSet<String>>
  stable isSelectMode: Function0<Boolean>
  stable onSelect: Function1<String, Unit>
)
fun rememberSubCategoryContentState(
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  unstable haptic: HapticFeedback? = @dynamic LocalHapticFeedback.current
  stable interactionSource: InteractionSource? = @static remember({
  MutableInteractionSource  (  )
}
, $composer, 0)
): SubCategoryContentState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SortDropdownMenu(
  stable showDropDownMenu: Function0<Boolean>
  stable sort: Function0<SubCategorySortPreferences>
  stable onSortClick: Function1<SubCategorySort, Unit>
  stable onOrderClick: Function1<SortOrder, Unit>
  stable onDismiss: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun Header()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SortButton(
  stable text: Int
  stable selectedRes: Function0<Int>
  stable onSortButtonClick: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SubCategoryHeader(
  stable parent: SubCategoryParent
  stable isAllExpand: Function0<Boolean>
  stable sort: Function0<SubCategorySortPreferences>
  stable allExpandIconClick: Function0<Unit>
  stable onSortClick: Function1<SubCategorySort, Unit>
  stable onOrderClick: Function1<SortOrder, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun HeaderText(
  stable parent: SubCategoryParent
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun AllExpandIcon(
  stable allExpandIconClick: Function0<Unit>
  stable allExpand: Function0<Boolean>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SortIcon(
  stable sort: Function0<SubCategorySortPreferences>
  stable onSortClick: Function1<SubCategorySort, Unit>
  stable onOrderClick: Function1<SortOrder, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SignInNavHost(
  unstable state: SignInNavHostState? = @dynamic rememberSignInNavHostState(null, $composer, 0, 0b0001)
)
fun rememberSignInNavHostState(
  unstable navController: NavHostController? = @dynamic rememberNavController(
  $composer   =   $composer  , 
  $changed   =   8
)
): SignInNavHostState
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable]]") fun SignInRoot(
  unstable viewModel: SignInRootViewModel? = @dynamic hiltViewModel(null, $composer, 0, 0b0001)
  stable content: @[ExtensionFunctionType] Function3<BoxScope, Composer, Int, Unit>
)
restartable skippable fun BlockBackButton(
  stable isLoading: Function0<Boolean>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun VisibleIcon(
  stable isVisible: Function0<Boolean>
  stable onClick: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun GoogleSignInButton(
  stable enabled: Function0<Boolean>
  stable onActivityResult: Function1<ActivityResult, Unit>
  stable disabled: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun GoogleIcon()
fun gso()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun OrDivider()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun EmailTextField(
  stable email: Function0<String>
  stable error: Function0<Int?>
  stable imeAction: ImeAction = @dynamic Companion.Next
  stable updateError: Function1<Int?, Unit>
  stable onEmailChange: Function1<String, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PasswordTextField(
  stable label: Int = @dynamic string.password
  stable password: Function0<String>
  stable error: Function0<Int?>
  stable imeAction: ImeAction
  stable onPasswordChange: Function1<String, Unit>
  stable updateError: Function1<Int?, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun NameTextField(
  stable name: Function0<String>
  stable onNameChange: Function1<String, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ResetPasswordScreen(
  unstable viewModel: ResetPasswordViewModel? = @dynamic hiltViewModel(null, $composer, 0, 0b0001)
  stable uiStates: ResetPasswordUIState? = @dynamic viewModel.uiStates
)
restartable skippable fun TaskSuccess(
  stable taskSuccess: Function0<Boolean>
  stable consumeIsTaskSuccess: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SignInScreen(
  stable onForgotPasswordClick: Function0<Unit>
  stable onEmailSignUpClick: Function0<Unit>
  unstable viewModel: SignInViewModel? = @dynamic hiltViewModel(null, $composer, 0, 0b0001)
  stable uiStates: BaseSignInUpUIState? = @dynamic viewModel.uiState
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SignUpText(
  stable onClick: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ForgotPasswordText(
  stable onClick: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SignUpScreen(
  unstable viewModel: SignUpViewModel? = @dynamic hiltViewModel(null, $composer, 0, 0b0001)
  stable uiStates: SignUpUIState? = @dynamic viewModel.uiStates
)
restartable skippable scheme("[0, [0]]") fun ClothingHelperTheme(
  stable content: Function2<Composer, Int, Unit>
)
